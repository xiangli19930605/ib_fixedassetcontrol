package me.jessyan.armscomponent.commonsdk.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import me.jessyan.armscomponent.commonsdk.bean.Historyrecord.AssetsBean;
import me.jessyan.armscomponent.commonsdk.bean.Historyrecord.HistoryData;
import me.jessyan.armscomponent.commonsdk.bean.Historyrecord.TaskBean;

import me.jessyan.armscomponent.commonsdk.greendao.AssetsBeanDao;
import me.jessyan.armscomponent.commonsdk.greendao.HistoryDataDao;
import me.jessyan.armscomponent.commonsdk.greendao.TaskBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig assetsBeanDaoConfig;
    private final DaoConfig historyDataDaoConfig;
    private final DaoConfig taskBeanDaoConfig;

    private final AssetsBeanDao assetsBeanDao;
    private final HistoryDataDao historyDataDao;
    private final TaskBeanDao taskBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        assetsBeanDaoConfig = daoConfigMap.get(AssetsBeanDao.class).clone();
        assetsBeanDaoConfig.initIdentityScope(type);

        historyDataDaoConfig = daoConfigMap.get(HistoryDataDao.class).clone();
        historyDataDaoConfig.initIdentityScope(type);

        taskBeanDaoConfig = daoConfigMap.get(TaskBeanDao.class).clone();
        taskBeanDaoConfig.initIdentityScope(type);

        assetsBeanDao = new AssetsBeanDao(assetsBeanDaoConfig, this);
        historyDataDao = new HistoryDataDao(historyDataDaoConfig, this);
        taskBeanDao = new TaskBeanDao(taskBeanDaoConfig, this);

        registerDao(AssetsBean.class, assetsBeanDao);
        registerDao(HistoryData.class, historyDataDao);
        registerDao(TaskBean.class, taskBeanDao);
    }
    
    public void clear() {
        assetsBeanDaoConfig.clearIdentityScope();
        historyDataDaoConfig.clearIdentityScope();
        taskBeanDaoConfig.clearIdentityScope();
    }

    public AssetsBeanDao getAssetsBeanDao() {
        return assetsBeanDao;
    }

    public HistoryDataDao getHistoryDataDao() {
        return historyDataDao;
    }

    public TaskBeanDao getTaskBeanDao() {
        return taskBeanDao;
    }

}
